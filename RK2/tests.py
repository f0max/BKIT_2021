import unittest
from main import *

class Test(unittest.TestCase):
    def setUp(self):
        self.providers = [
        Provider(1, 'ПАО "Ижсталь"'),
        Provider(2, 'ПК "ГМК Норникель"'),
        Provider(3, 'ПК "Северсталь"'),
        Provider(4, 'ПК "РУСАЛ Красноярск"'),
        Provider(5, 'ООО "ПФ Инзенский ДОЗ"'),
        Provider(6, 'Тайшетский АЗ'),
        Provider(7, 'ПК Челябинский МК'),
        Provider(8, 'ПК Металлогорский МК')
        ]

        self.details = [
        Detail(1, 'Болт М2', 'Сталь', 1),
        Detail(2, 'Труба Д16Т', 'Никель', 2),
        Detail(3, 'Доска 160х20', 'Дерево', 5),
        Detail(4, 'Штуцер М26хШ22', 'Сталь', 3),
        Detail(5, 'Профиль 20х20х2000', 'Алюминий', 4),
        Detail(6, 'Фланец Д25', 'Алюминий', 8),
        Detail(7, 'Калиброванный прокат', 'Сталь', 1),
        Detail(8, 'Лента', 'Сталь', 1),
        Detail(9, 'Катодный лист Н-1У', 'Никель', 2),
        Detail(10, 'Фольга', 'Алюминий', 3),
        Detail(11, 'Колесный диск', 'Алюминий', 3),
        Detail(12, 'Катанка', 'Алюминий', 3)
        ]
        
        self.dets_provs = [
        DetProv(1, 1),
        DetProv(1, 3),
        DetProv(1, 7),
        DetProv(1, 8),

        DetProv(2, 2),

        DetProv(3, 5),
        
        DetProv(4, 1),
        DetProv(4, 3),
        DetProv(4, 7),
        DetProv(4, 8),

        DetProv(5, 4),
        DetProv(5, 6),

        DetProv(6, 4),
        DetProv(6, 6),

        DetProv(7, 1),
        DetProv(7, 3),
        DetProv(7, 7),
        DetProv(7, 8),

        DetProv(8, 1),
        DetProv(8, 3),
        DetProv(8, 7),
        DetProv(8, 8),

        DetProv(9, 2),

        DetProv(10, 4),
        DetProv(10, 6),

        DetProv(11, 4),
        DetProv(11, 6),

        DetProv(12, 4),
        DetProv(12, 6)
        ]

    def test_task_1(self):

        key_fot_test = [
        ('Болт М2', 'Сталь', 'ПАО "Ижсталь"'),
        ('Доска 160х20', 'Дерево', 'ООО "ПФ Инзенский ДОЗ"'),
        ('Калиброванный прокат', 'Сталь', 'ПАО "Ижсталь"'),
        ('Катанка', 'Алюминий', 'ПК "Северсталь"'),
        ('Катодный лист Н-1У', 'Никель', 'ПК "ГМК Норникель"'),
        ('Колесный диск', 'Алюминий', 'ПК "Северсталь"'),
        ('Лента', 'Сталь', 'ПАО "Ижсталь"'),
        ('Профиль 20х20х2000', 'Алюминий', 'ПК "РУСАЛ Красноярск"'),
        ('Труба Д16Т', 'Никель', 'ПК "ГМК Норникель"'),
        ('Фланец Д25', 'Алюминий', 'ПК Металлогорский МК'),
        ('Фольга', 'Алюминий', 'ПК "Северсталь"'),
        ('Штуцер М26хШ22', 'Сталь', 'ПК "Северсталь"'),
        ]

        self.assertEqual(task1(self.providers, self.details), key_fot_test)

    def test_task_2(self):

        key_fot_test = [
            ('ПК "Северсталь"', 4),
            ('ПАО "Ижсталь"', 3),
            ('ПК "ГМК Норникель"', 2),
            ('ПК "РУСАЛ Красноярск"', 1),
            ('ООО "ПФ Инзенский ДОЗ"', 1),
            ('ПК Металлогорский МК', 1),
        ]

        self.assertEqual(task2(self.providers, self.details), key_fot_test)

    def test_task_3(self):

        key_fot_test = {
            'ПК "ГМК Норникель"': ['Труба Д16Т', 'Катодный лист Н-1У'],
            'ПК "Северсталь"': ['Болт М2', 'Штуцер М26хШ22', 'Калиброванный прокат', 'Лента'],
            'ПК "РУСАЛ Красноярск"': ['Профиль 20х20х2000', 'Фланец Д25', 'Фольга', 'Колесный диск', 'Катанка'],
            'ПК Челябинский МК': ['Болт М2', 'Штуцер М26хШ22', 'Калиброванный прокат', 'Лента'],
            'ПК Металлогорский МК': ['Болт М2', 'Штуцер М26хШ22', 'Калиброванный прокат', 'Лента'],
        }

        self.assertEqual(task3(self.providers, self.details, self.dets_provs), key_fot_test)

if __name__ == "__main__":
    unittest.main()